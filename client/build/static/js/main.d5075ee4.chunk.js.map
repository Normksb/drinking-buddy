{"version":3,"sources":["utils/mutations.js","utils/auth.js","components/Login.jsx","components/SignUp.jsx","components/navi/Header.jsx","components/navi/Footer.jsx","utils/queries.js","components/Profile.jsx","components/Session.jsx","components/Sessions.jsx","components/Dashboard.jsx","app.js","index.js"],"names":["LOGIN_USER","gql","SIGNUP_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","console","log","reload","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","handleChange","data","event","target","name","value","handleFormSubmit","a","preventDefault","variables","Auth","message","class","className","onSubmit","src","alt","width","for","id","placeholder","autoComplete","type","onChange","style","cursor","to","SignUp","age","weight","gender","signUp","val","parseInt","addUser","Header","Component","Footer","QUERY_PROFILE","QUERY_DRINKS","Profile","profile_id","getProfile","_id","useQuery","loading","profile","user","isInSession","href","Session","cancelSession","React","setDrinking","setTime","timer","setTimer","setTotaltime","addDrink","setAddDrink","drinksLoading","drinksError","useEffect","ts","moment","startOf","drinktime","setInterval","add","utc","seconds","format","clearInterval","onClick","drinks","map","drink","Drink","Sessions","state","displaySessionButtons","inSession","onDelete","Fragment","outSession","Dashboard","handleLogout","clear","hNewSession","setState","hCancelSession","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","requireAuth","nextState","replace","next","pathname","nextPathname","App","ApolloProvider","exact","path","component","onEnter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5075ee4.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        name\n      }\n    }\n  }\n`;\n\n// export const SIGNUP_USER = gql`\n//   mutation Mutation($addUserName: String!, $addUserEmail: String!, $addUserPassword: String!, $addUserAge: Int!, $addUserWeight: Int!, $addUserGender: String) {\n//     addUser(name: $addUserName, email: $addUserEmail, password: $addUserPassword, age: $addUserAge, weight: $addUserWeight, gender: $addUserGender) {\n//       token\n//       user {\n//         name\n//       }\n//     }\n//   }`;\n\nexport const SIGNUP_USER = gql`\n  mutation signUp($name: String!, $email: String!, $password: String!, $age: Int!, $weight: Int!, $gender: String!) {\n    addUser(name: $name, email: $email, password: $password, age: $age, weight: $weight, gender: $gender) {\n      token\n      user {\n        _id\n        name\n      }\n    }\n  }\n`;\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"id_token\");\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/dashboard\");\n  }\n\n  logout() {\n    console.log(\"logging out\");\n    localStorage.removeItem(\"id_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\nimport '../utils/css/login.scss';\n\nconst Login = (props) => {\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [login, { error, data }] = useMutation(LOGIN_USER);\n  \n    // update state based on form input changes\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n  \n      setFormState({\n        ...formState,\n        [name]: value,\n      });\n    };\n  \n    // submit form\n    const handleFormSubmit = async (event) => {\n      event.preventDefault();\n      //console.log(formState);\n      try {\n        const { data } = await login({\n          variables: { ...formState },\n        });\n  \n        Auth.login(data.login.token);\n      } catch (error) {\n        console.error(error.message);\n      }\n  \n      // clear form values\n      setFormState({\n        email: '',\n        password: '',\n      });\n    };\n  \n    return (\n      <div class=\"container\">\n        <div class=\"row text-center\">\n          <form className=\"form-signin\" onSubmit={handleFormSubmit}>\n            <img className=\"mb-4\" src=\"images/dblogo-black-200.png\" alt=\"\" width=\"200\" />\n            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n            {error && (\n              <div className=\"my-2 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n            <label for=\"inputEmail\" className=\"sr-only\">Email address</label>\n            <input\n              id=\"inputEmail\"\n              className=\"form-control\"\n              placeholder=\"Your email\"\n              autoComplete=\"email\"\n              name=\"email\"\n              type=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n            <label for=\"inputPassword\" className=\"sr-only\">Password</label>\n            <input\n              id=\"inputPassword\"\n              className=\"form-control\"\n              placeholder=\"******\"\n              autoComplete=\"current-password\"\n              name=\"password\"\n              type=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n            <button\n              style={{ cursor: 'pointer' }}\n              type=\"submit\"\n              className=\"btn btn-lg btn-primary btn-block db-btn db-btn-yellow\"\n            >\n              Sign in\n            </button>\n            <br />or<br />\n            <Link to=\"/signup\" className=\"btn btn-lg btn-secondary btn-block mt-4 db-btn\">Register</Link>\n          </form>\n        </div>\n      </div>\n      \n    );\n  };\n  \n  export default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { SIGNUP_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\nimport '../utils/css/login.scss';\n\nconst SignUp = (props) => {\n    const [formState, setFormState] = useState({ email: '',\n                                                 password: '',\n                                                 age: '',\n                                                 weight: '',\n                                                 name: '',\n                                                 gender: ''\n                                                 });\n                                                 \n    const [signUp, { error, data }] = useMutation(SIGNUP_USER);\n  \n    // update state based on form input changes\n    const handleChange = (event) => {\n      const { name, value, type } = event.target;\n      let val = value;\n      if(type == 'number'){\n        val = parseInt(value);\n      }\n      setFormState({\n        ...formState,\n        [name]: val,\n      });\n      console.log(formState);\n    };\n  \n    // submit form\n    const handleFormSubmit = async (event) => {\n      event.preventDefault();\n      console.log(formState);\n      try {\n        const { data } = await signUp({\n          variables: { ...formState },\n        });\n  \n        Auth.login(data.addUser.token);\n        \n        // clear form values\n        // setFormState({ email: '',\n        //   password: '',\n        //   age: '',\n        //   weight: '',\n        //   name: '',\n        //   gender: '',\n        // });\n      } catch (error) {\n        console.error(error.message);\n      }\n  \n    };\n    return (\n      <div class=\"container\">\n        <div class=\"row text-center\">\n          <form className=\"form-signup\" onSubmit={handleFormSubmit}>\n            <img className=\"mb-4\" src=\"images/dblogo-black-200.png\" alt=\"\" width=\"200\" />\n            <h1 className=\"h3 mb-3 font-weight-normal\">REGISTER</h1>\n            {error && (\n              <div className=\"my-2 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n            <label for=\"inputName\" className=\"sr-only\">Name</label>\n            <input\n              id=\"inputName\"\n              className=\"form-control rounded-top\"\n              placeholder=\"Your Name\"\n              name=\"name\"\n              type=\"text\"\n              value={formState.name}\n              onChange={handleChange}\n            />\n            <label for=\"inputEmail\" className=\"sr-only\">Email address</label>\n            <input\n              id=\"inputEmail\"\n              className=\"form-control rounded-0\"\n              placeholder=\"Your email\"\n              name=\"email\"\n              type=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n            <label for=\"inputPassword\" className=\"sr-only\">Password</label>\n            <input\n              id=\"inputPassword\"\n              className=\"form-control rounded-0\"\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n            <label for=\"inputAge\" className=\"sr-only\">Age</label>\n            <input\n              id=\"inputAge\"\n              className=\"form-control rounded-0\"\n              placeholder=\"Your Age\"\n              name=\"age\"\n              type=\"number\"\n              value={formState.age}\n              onChange={handleChange}\n            />\n            <label for=\"inputWeight\" className=\"sr-only\">Weight</label>\n            <input\n              id=\"inputWeight\"\n              className=\"form-control rounded-0\"\n              placeholder=\"Your weight in Kgs\"\n              name=\"weight\"\n              type=\"number\"\n              value={formState.weight}\n              onChange={handleChange}\n            />\n            <label for=\"gender\" className=\"sr-only\">Gender</label>\n            <select id=\"gender\" name=\"gender\" className=\"form-control mb-4 rounded-bottom\" onChange={handleChange}>\n                <option value=\"\">Choose Gender</option>\n                <option value=\"male\">male</option>\n                <option value=\"female\">female</option>\n            </select>\n            <button\n              style={{ cursor: 'pointer' }}\n              type=\"submit\"\n              className=\"btn btn-lg btn-primary btn-block db-btn db-btn-yellow\"\n            >\n              SIGN UP\n            </button>\n            <br />or<br />\n            <Link to=\"/\" className=\"btn btn-lg btn-secondary btn-block mt-4 db-btn\">Login</Link>\n          </form>\n        </div>\n      </div>\n        \n    );\n}\n\nexport default SignUp","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header id=\"header-nav\">\r\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n          <div className=\"container-fluid\">\r\n            <img\r\n              src=\"/images/dlogo-hor-340.png\"\r\n              alt=\"Drinking Buddy,  your drinking companion\"\r\n              className=\"text-center img-responsive\"\r\n              id=\"logo\"\r\n            />\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <div className=\"container  text-center\">\r\n          <span className=\"text-muted\">Drinking Buddy&copy; 2021 by NKSB</span>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const QUERY_PROFILE = gql`\r\n  query user($profile_id: ID!) {\r\n    user(userId: $profile_id) {\r\n      name\r\n      email\r\n      password\r\n      age\r\n      weight\r\n      gender\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_DRINKS = gql`\r\n  query GetDrinks {\r\n    drinks {\r\n      _id\r\n      Drink\r\n      Potency\r\n      Volume\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n//import { SIGNUP_USER } from '../utils/mutations';\n\nimport { QUERY_PROFILE } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\n\nconst Profile = (props) => {\n  const profile_id = Auth.getProfile().data._id;\n\n  const { loading, data, error } = useQuery(QUERY_PROFILE, {\n    variables: { profile_id },\n  });\n  if (!data) return false;\n  console.log(\"Profile\", data);\n  if (error) {\n    console.error(\"query error\", error);\n  }\n\n  const profile = data.user;\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!profile?.name) {\n    return (\n      <h4>\n        You need to be logged in to see your profile page. Use the navigation\n        links above to sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div className=\"card order-info\">\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{profile.name}</h4>\n        <p className=\"card-text\">{profile.email}</p>\n      </div>\n      <ul className=\"collapse list-group list-group-flush\" id=\"profile\">\n        <li className=\"list-group-item\">\n          <strong>Age</strong> {profile.age}\n        </li>\n        <li className=\"list-group-item\">\n          <strong>Weight</strong> {profile.weight}\n        </li>\n        <li className=\"list-group-item\">\n          <strong>Gender</strong> {profile.gender}\n        </li>\n      </ul>\n      <div className=\"card-footer\">\n        {props.isInSession === 0 && (\n          <a href=\"/\" className=\"card-link\">\n            Edit\n          </a>\n        )}\n        <button\n          data-target=\"#profile\"\n          className=\"btn btn-sm float-right\"\n          data-toggle=\"collapse\"\n          aria-expanded=\"false\"\n          aria-controls=\"profile-info\"\n        >\n          Toggle Info\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { QUERY_DRINKS } from \"../utils/queries\";\r\n\r\nconst Session = ({ cancelSession }) => {\r\n  const [drinking, setDrinking] = React.useState(0);\r\n  const [time, setTime] = React.useState({});\r\n  const [timer, setTimer] = React.useState(0);\r\n  const [ts, setTs] = React.useState(0);\r\n  const [totaltime, setTotaltime] = React.useState(0);\r\n  const [addDrink, setAddDrink] = React.useState(0);\r\n  const { drinksLoading, drinksError, data } = useQuery(QUERY_DRINKS);\r\n\r\n  useEffect(() => {\r\n    let ts = moment().startOf(\"day\");\r\n    const drinktime = setInterval(function () {\r\n      setTime(ts.add(1, \"second\"));\r\n      setTimer(moment.utc(ts.seconds() * 1000).format(\"H:mm:ss\"));\r\n      setTotaltime(ts.seconds());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(drinktime);\r\n      setDrinking(0);\r\n      setTime(0);\r\n      setTimer(0);\r\n      setTotaltime(0);\r\n    };\r\n  }, []);\r\n\r\n  const hAddDrink = () => {\r\n    setAddDrink(1);\r\n  };\r\n\r\n  const handleAddDrink = () => {};\r\n\r\n  return (\r\n    <div id=\"drinking-session\" className=\"my-4 text-center\">\r\n      <div id=\"drinking-session\">\r\n        <h3 className=\"timer\">{timer}</h3>\r\n        <button onClick={cancelSession} className=\"btn btn-danger btn-lg m-2\">\r\n          Stop Drinking\r\n        </button>\r\n        <button onClick={hAddDrink} className=\"btn btn-warning btn-lg m-2\">\r\n          Add a drink\r\n        </button>\r\n      </div>\r\n      {addDrink === 1 && (\r\n        <div className=\"add-drink\">\r\n          <form\r\n            onSubmit={handleAddDrink}\r\n            className=\"form-inline justify-content-center my-5\"\r\n          >\r\n            <select\r\n              name=\"drink\"\r\n              className=\"form-control form-control-md w-auto my-2 mr-sm-2 rounded-left\"\r\n            >\r\n              {drinksLoading ? '<option value=\"\" >Loading</option>' : \"\"}\r\n              {drinksError ? '<option value=\"\">Error</option>' : \"\"}\r\n              {data\r\n                ? data.drinks.map((drink) => (\r\n                    <option key={drink} value={drink}>\r\n                      {drink.Drink}\r\n                    </option>\r\n                  ))\r\n                : \"\"}\r\n            </select>\r\n            <button type=\"submit\" className=\"btn btn-primary my-2\">\r\n              Add\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Session;\r\n\r\n/**\r\nclass Session extends Component {\r\n  state = {\r\n    drinking: 0,\r\n    time: {},\r\n    timer: 0,\r\n    ts: 0,\r\n    drinks: [\r\n      {\r\n        volume: 0,\r\n        alc: 0,\r\n      },\r\n    ],\r\n    displayAddDrink: 0,\r\n  };\r\n  theTimer = null;\r\n  startTimer = () => {\r\n    this.setState({ drinking: 1 });\r\n    if (this.state.timer == 0) {\r\n      let ts = moment().startOf(\"day\");\r\n      this.theTimer = setInterval(\r\n        () =>\r\n          this.setState({\r\n            time: ts.add(1, \"second\"),\r\n            timer: moment.utc(ts.seconds() * 1000).format(\"H:mm:ss\"),\r\n          }),\r\n        1000\r\n      );\r\n    }\r\n  };\r\n  hStartDrinking = () => {\r\n    this.startTimer();\r\n  };\r\n  hStopDrinking = () => {\r\n    this.setState({ drinking: 0, time: {}, timer: 0, ts: 0 });\r\n    clearInterval(this.theTimer);\r\n  };\r\n  hAddDrink = () => {\r\n    this.setState({ displayAddDrink: 1 });\r\n    let drinks = this.getDrinks();\r\n  };\r\n  displayAddDrink = () => {\r\n    return (\r\n      <div className=\"add-drink\">\r\n        <form className=\"form-inline justify-content-center my-5\">\r\n          <select\r\n            name=\"drink\"\r\n            className=\"form-control form-control-md w-auto my-2 mr-sm-2 rounded-0 rounded-left\"\r\n          >\r\n            {this.getDrinks}\r\n          </select>\r\n          <button type=\"submit\" className=\"btn btn-primary my-2\">\r\n            Add\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  getDrinks = () => {\r\n    const { loading, error, data } = useQuery(QUERY_DRINKS);\r\n    if (loading) {\r\n      return \"Loading...\";\r\n    }\r\n    if (error) {\r\n      return error.message;\r\n    }\r\n    return data.drinks.map((drink) => (\r\n      <option key={drink} value={drink}>\r\n        {drink.Drink}\r\n      </option>\r\n    ));\r\n  };\r\n  render() {\r\n    return (\r\n      <div id=\"drinking-session\" className=\"my-4 text-center\">\r\n        {this.state.drinking === 0 && (\r\n          <div id=\"drinking-session-buttons\">\r\n            <button\r\n              onClick={this.hStartDrinking}\r\n              className=\"btn btn-primary btn-lg m-2\"\r\n            >\r\n              Start Drinking\r\n            </button>\r\n            <button\r\n              onClick={this.props.cancelSession}\r\n              className=\"btn btn-secondary btn-lg m-2\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.state.drinking === 1 && (\r\n          <div id=\"drinking-session\">\r\n            <h3 className=\"timer\">{this.state.timer}</h3>\r\n            <button\r\n              onClick={this.hStopDrinking}\r\n              className=\"btn btn-danger btn-lg m-2\"\r\n            >\r\n              Stop Drinking\r\n            </button>\r\n            <button\r\n              onClick={this.hAddDrink}\r\n              className=\"btn btn-warning btn-lg m-2\"\r\n            >\r\n              Add a drink\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.state.displayAddDrink === 1 &&\r\n          this.state.drinking === 1 &&\r\n          this.displayAddDrink()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Session;\r\n**/\r\n","import { timers } from \"jquery\";\r\nimport React, { Component } from \"react\";\r\nimport Session from \"./Session\";\r\n\r\nclass Sessions extends Component {\r\n  state = {};\r\n  displaySessionButtons = () => {\r\n    return (\r\n      <div id=\"sessions-btns\" className=\"w-100\">\r\n        <button\r\n          onClick={this.props.inSession}\r\n          className=\"btn btn-primary btn-md my-2 mr-2\"\r\n        >\r\n          Start new session\r\n        </button>\r\n        <button\r\n          onClick={this.props.onDelete}\r\n          className=\"btn btn-danger btn-md my-2 ml-2 float-right\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {!this.props.isInSession && this.displaySessionButtons()}\r\n        {this.props.isInSession && (\r\n          <Session cancelSession={this.props.outSession} />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sessions;\r\n","import React, {\r\n  Component,\r\n  createContext,\r\n  createFactory,\r\n  useState,\r\n} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Auth from \"../utils/auth\";\r\nimport Header from \"./navi/Header\";\r\nimport Footer from \"./navi/Footer\";\r\nimport Profile from \"./Profile\";\r\nimport Sessions from \"./Sessions\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    isInSession: 0,\r\n  };\r\n  handleLogout = () => {\r\n    localStorage.clear();\r\n    window.location.href = \"/\";\r\n  };\r\n  hNewSession = () => {\r\n    this.setState({ isInSession: 1 });\r\n  };\r\n  hCancelSession = () => {\r\n    this.setState({ isInSession: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header></Header>\r\n        <div id=\"main-container\" className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <Profile isInSession={this.state.isInSession}></Profile>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <Sessions\r\n                onDelete={this.handleLogout}\r\n                isInSession={this.state.isInSession}\r\n                inSession={this.hNewSession}\r\n                outSession={this.hCancelSession}\r\n              ></Sessions>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer></Footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Dashboard from \"./components/Dashboard\";\n\n// Create main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction requireAuth(nextState, replace, next) {\n  if (!authLink) {\n    replace({\n      pathname: \"/login\",\n      state: { nextPathname: nextState.location.pathname },\n    });\n  }\n  next();\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route\n            exact\n            path=\"/dashboard\"\n            component={Dashboard}\n            onEnter={requireAuth}\n          />\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './app.scss';\nimport 'bootstrap/dist/js/bootstrap.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}