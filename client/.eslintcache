[{"C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\index.js":"1","C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\app.js":"2","C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\components\\Login.js":"3","C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\utils\\auth.js":"4","C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\utils\\mutations.js":"5"},{"size":200,"mtime":1628751613062,"results":"6","hashOfConfig":"7"},{"size":883,"mtime":1628750931388,"results":"8","hashOfConfig":"7"},{"size":2068,"mtime":1628751331100,"results":"9","hashOfConfig":"7"},{"size":1043,"mtime":1628242722324,"results":"10","hashOfConfig":"7"},{"size":503,"mtime":1628751706193,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j8sim3",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\index.js",[],"C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\app.js",["24","25"],"import React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Login from './components/Login';\r\n\r\n// Create main GraphQL API endpoint\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n        <Login />\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\components\\Login.js",["26","27","28"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n    const [login, { error, data }] = useMutation(LOGIN_USER);\r\n  \r\n    // update state based on form input changes\r\n    const handleChange = (event) => {\r\n      const { name, value } = event.target;\r\n  \r\n      setFormState({\r\n        ...formState,\r\n        [name]: value,\r\n      });\r\n    };\r\n  \r\n    // submit form\r\n    const handleFormSubmit = async (event) => {\r\n      event.preventDefault();\r\n      console.log(formState);\r\n      try {\r\n        const { data } = await login({\r\n          variables: { ...formState },\r\n        });\r\n  \r\n        Auth.login(data.login.token);\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n  \r\n      // clear form values\r\n      setFormState({\r\n        email: '',\r\n        password: '',\r\n      });\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n                <form onSubmit={handleFormSubmit}>\r\n                  <input\r\n                    className=\"form-input\"\r\n                    placeholder=\"Your email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={formState.email}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <input\r\n                    className=\"form-input\"\r\n                    placeholder=\"******\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={formState.password}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <button\r\n                    style={{ cursor: 'pointer' }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              \r\n        </div>\r\n      \r\n    );\r\n  };\r\n  \r\n  export default Login;","C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\utils\\auth.js",[],"C:\\Users\\Work\\code\\bootcamp-homework\\drinking-buddy\\client\\src\\utils\\mutations.js",[],{"ruleId":"29","severity":1,"message":"30","line":9,"column":27,"nodeType":"31","messageId":"32","endLine":9,"endColumn":33},{"ruleId":"29","severity":1,"message":"33","line":9,"column":35,"nodeType":"31","messageId":"32","endLine":9,"endColumn":40},{"ruleId":"29","severity":1,"message":"34","line":2,"column":10,"nodeType":"31","messageId":"32","endLine":2,"endColumn":14},{"ruleId":"29","severity":1,"message":"35","line":10,"column":21,"nodeType":"31","messageId":"32","endLine":10,"endColumn":26},{"ruleId":"29","severity":1,"message":"36","line":10,"column":28,"nodeType":"31","messageId":"32","endLine":10,"endColumn":32},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used."]